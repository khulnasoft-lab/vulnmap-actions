# A sample workflow which checks out your Infrastructure as Code Configuration files,
# such as Kubernetes, Helm & Terraform and scans them for any security issues.
# The results are then uploaded to GitHub Security Code Scanning
#
# For more examples, including how to limit scans to only high-severity issues
# and fail PR checks, see https://github.com/khulnasoft-lab/vulnmap-actions/

name: Vulnmap Infrastructure as Code
on: push
jobs:
  vulnmap:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run Vulnmap to check configuration files for security issues
        # Vulnmap can be used to break the build when it detects security issues.
        # In this case we want to upload the issues to GitHub Code Scanning
        continue-on-error: true
        uses: khulnasoft-lab/vulnmap-actions/iac@master
        env:
          # In order to use the Vulnmap Action you will need to have a Vulnmap API token.
          # More details in https://github.com/khulnasoft-lab/vulnmap-actions#getting-your-vulnmap-token
          # or you can signup for free at https://khulnasoft.com/login
          VULNMAP_TOKEN: ${{ secrets.VULNMAP_TOKEN }}
        # Scans the whole repository by default.
        # Alternatively, add the path to the configuration file that you would like to test.
        # For example `deployment.yaml` for a Kubernetes deployment manifest
        # or `main.tf` for a Terraform configuration file
        # with:
          # file: your-file-to-test.yaml
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: vulnmap.sarif
