# A sample workflow which checks out the code, builds a container
# image using Docker and scans that image for vulnerabilities using
# Vulnmap. The results are then uploaded to GitHub Security Code Scanning
#
# For more examples, including how to limit scans to only high-severity
# issues, monitor images for newly disclosed vulnerabilities in Vulnmap and
# fail PR checks for new vulnerabilities, see https://github.com/khulnasoft-lab/vulnmap-actions/

name: Vulnmap Container 
on: push
jobs:
  vulnmap:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build a Docker image
      run: docker build -t your/image-to-test .
    - name: Run Vulnmap to check Docker image for vulnerabilities
      # Vulnmap can be used to break the build when it detects vulnerabilities.
      # In this case we want to upload the issues to GitHub Code Scanning
      continue-on-error: true
      uses: khulnasoft-lab/vulnmap-actions/docker@master
      env:
        # In order to use the Vulnmap Action you will need to have a Vulnmap API token.
        # More details in https://github.com/khulnasoft-lab/vulnmap-actions#getting-your-vulnmap-token
        # or you can signup for free at https://khulnasoft.com/login
        VULNMAP_TOKEN: ${{ secrets.VULNMAP_TOKEN }}
      with:
        image: your/image-to-test
        args: --file=Dockerfile
    - name: Upload result to GitHub Code Scanning
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: vulnmap.sarif
